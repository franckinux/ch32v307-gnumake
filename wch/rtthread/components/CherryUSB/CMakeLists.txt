option(PKG_CHERRYUSB_DEVICE_HS "USB Device in High speed" OFF)
option(PKG_CHERRYUSB_DEVICE_HS_IN_FULL "USB Device High speed in full speed" OFF)
option(PKG_CHERRYUSB_DEVICE_CDC "CDC Class" OFF)
option(PKG_CHERRYUSB_DEVICE_HID "HID Class" OFF)
option(PKG_CHERRYUSB_DEVICE_MSC "MSC Class" OFF)
option(PKG_CHERRYUSB_DEVICE_AUDIO "AUDIO Class" OFF)
option(PKG_CHERRYUSB_DEVICE_VIDEO "VIDEO Class" OFF)
option(PKG_CHERRYUSB_DEVICE_RNDIS "RNDIS Class" OFF)
option(PKG_CHERRYUSB_USING_DFU "DFU Class" OFF)
option(PKG_CHERRYUSB_USING_HUB "HUB Class" OFF)
option(PKG_CHERRYUSB_DEVICE_CH32VXXX "ch32v3xx driver" OFF)
option(PKG_CHERRYUSB_RTTHREAD "Use RT-Thread" OFF)

target_sources(${TARGET_ELF}  PRIVATE core/usbd_core.c)
target_include_directories(${TARGET_ELF}  PUBLIC . common core)

if(PKG_CHERRYUSB_DEVICE_HS)
    target_compile_definitions(${TARGET_ELF}  PUBLIC CONFIG_USB_HS)
elseif(PKG_CHERRYUSB_DEVICE_HS_IN_FULL)
    target_compile_definitions(${TARGET_ELF}  PUBLIC CONFIG_USB_HS_IN_FULL)
endif()

if(PKG_CHERRYUSB_DEVICE_CDC)
    target_include_directories(${TARGET_ELF}  PUBLIC class/cdc)
    target_sources(${TARGET_ELF}  PRIVATE class/cdc/usbd_cdc.c)
endif()
if(PKG_CHERRYUSB_DEVICE_HID)
    target_include_directories(${TARGET_ELF}  PUBLIC class/hid)
    target_sources(${TARGET_ELF}  PRIVATE class/hid/usbd_hid.c)
endif()
if(PKG_CHERRYUSB_DEVICE_MSC)
    target_include_directories(${TARGET_ELF}  PUBLIC class/msc)
    target_sources(${TARGET_ELF}  PRIVATE class/msc/usbd_msc.c)
endif()
if(PKG_CHERRYUSB_DEVICE_AUDIO)
    target_include_directories(${TARGET_ELF}  PUBLIC class/audio)
    target_sources(${TARGET_ELF}  PRIVATE class/audio/usbd_audio.c)
endif()
if(PKG_CHERRYUSB_DEVICE_VIDEO)
    target_include_directories(${TARGET_ELF}  PUBLIC class/video)
    target_sources(${TARGET_ELF}  PRIVATE class/video/usbd_video.c)
endif()
if(PKG_CHERRYUSB_DEVICE_RNDIS)
    target_include_directories(${TARGET_ELF}  PUBLIC class/wireless)
    target_sources(${TARGET_ELF}  PRIVATE class/wireless/usbd_rndis.c)
endif()
if(PKG_CHERRYUSB_USING_DFU)
    target_include_directories(${TARGET_ELF}  PUBLIC class/dfu)
    target_sources(${TARGET_ELF}  PRIVATE class/dfu/usbd_dfu.c)
endif()
if(PKG_CHERRYUSB_USING_HUB)
    target_include_directories(${TARGET_ELF}  PUBLIC class/hub)
    target_sources(${TARGET_ELF}  PRIVATE class/hub/usbd_hub.c)
endif()
if(PKG_CHERRYUSB_DEVICE_CH32VXXX)
    target_include_directories(${TARGET_ELF}  PUBLIC port/ch32)
    if(PKG_CHERRYUSB_DEVICE_HS)
        target_sources(${TARGET_ELF}  PRIVATE port/ch32/usb_dc_usbhs.c)
    else()
        target_sources(${TARGET_ELF}  PRIVATE port/ch32/usb_dc_usbfs.c)
    endif()
endif()
if(PKG_CHERRYUSB_RTTHREAD)
    target_include_directories(${TARGET_ELF}  PUBLIC osal)
    target_sources(${TARGET_ELF}  PRIVATE osal/usb_osal_rtthread.c)
    target_sources(${TARGET_ELF}  PRIVATE osal/usb_workq.c)
endif()
